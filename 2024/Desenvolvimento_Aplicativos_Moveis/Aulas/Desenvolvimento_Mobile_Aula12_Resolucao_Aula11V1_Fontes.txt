/* 
Fontes da resolução do problema da Aula 11 - Primeira versão

Nome do projeto: Resolucao Aula11 V1

*/

// MainActivity
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.material.MaterialTheme
import androidx.compose.material.Surface
import androidx.compose.ui.Modifier
import androidx.lifecycle.viewmodel.compose.viewModel
import androidx.navigation.compose.rememberNavController
import com.up_des_mobile.resolucaoaula11v1.ui.theme.ResolucaoAula11V1Theme
import com.up_des_mobile.resolucaoaula11v1.view.AppNavHost
import com.up_des_mobile.resolucaoaula11v1.viewModel.MainViewModel

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            ResolucaoAula11V1Theme {
                Surface(modifier = Modifier.fillMaxSize(), color = MaterialTheme.colors.background) {
                    val viewModel: MainViewModel = viewModel()
                    val navController = rememberNavController()

                    AppNavHost(navController, viewModel)
                }
            }
        }
    }
}

//------------
// Pessoa
data class Pessoa(
    val nome: String,
    val numeroTelefone: String,
    val descricao: String
)

//---------------
// MainViewModel
import androidx.compose.runtime.mutableStateOf
import androidx.lifecycle.ViewModel
import com.up_des_mobile.resolucaoaula11v1.model.Pessoa

class MainViewModel : ViewModel() {
    private val _pessoa = mutableStateOf<Pessoa?>(null)
    val pessoa: Pessoa?
        get() = _pessoa.value

    fun setPessoa(pessoa: Pessoa) {
        _pessoa.value = pessoa
    }
}

//----------------
// MenunPrincipal
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.material.Button
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import androidx.navigation.NavHostController
import androidx.navigation.compose.NavHost
import androidx.navigation.compose.composable
import com.up_des_mobile.resolucaoaula11v1.viewModel.MainViewModel

@Composable
fun AppNavHost(navController: NavHostController, viewModel: MainViewModel) {
    NavHost(navController = navController, startDestination = "menu") {
        composable("menu") {
            MenuPrincipal(navController, viewModel)
        }
        composable("dados") {
            TelaDados(navController, viewModel)
        }
        composable("compartilha") {
            TelaCompartilha(navController, viewModel)
        }
    }
}

@Composable
fun MenuPrincipal(navController: NavHostController ,viewModel : MainViewModel) {
    val pessoa = viewModel.pessoa

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ) {
        pessoa?.let {
            Text(text = it.nome)
            Text(text = it.numeroTelefone)
            Text(text = it.descricao)
        } ?: Text(text = "Não há dados pessoais")

        Spacer(modifier = Modifier.height(16.dp))
        Button(onClick = { navController.navigate("dados") }) {
            Text("Dados")
        }
        Button(
            onClick = {
                if (pessoa != null) {
                    navController.navigate("compartilha")
                }
            }
        ) {
            Text("Compartilhamento")
        }
    }
}

//----------------
// TelaDados

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.material.Button
import androidx.compose.material.Text
import androidx.compose.material3.OutlinedTextField
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.input.ImeAction
import androidx.compose.ui.text.input.KeyboardType
import androidx.compose.ui.unit.dp
import androidx.navigation.NavHostController
import com.up_des_mobile.resolucaoaula11v1.model.Pessoa
import com.up_des_mobile.resolucaoaula11v1.viewModel.MainViewModel

@Composable
fun TelaDados(navController: NavHostController, viewModel: MainViewModel) {
    var nome by remember { mutableStateOf(viewModel.pessoa?.nome ?: "") }
    var numeroTelefone by remember { mutableStateOf(viewModel.pessoa?.numeroTelefone ?: "") }
    var descricao by remember { mutableStateOf(viewModel.pessoa?.descricao ?: "") }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ) {
        Text("Nome:")
        OutlinedTextField(
            value = nome,
            onValueChange = { nome = it },
            keyboardOptions = KeyboardOptions.Default.copy(
                keyboardType = KeyboardType.Text,
                imeAction = ImeAction.Next
            )
        )

        Spacer(modifier = Modifier.height(8.dp))
        Text("Número de telefone:")
        OutlinedTextField(
            value = numeroTelefone,
            onValueChange = { numeroTelefone = it },
            keyboardOptions = KeyboardOptions.Default.copy(
                keyboardType = KeyboardType.Phone,
                imeAction = ImeAction.Next
            )
        )

        Spacer(modifier = Modifier.height(8.dp))
        Text("Descrição do biotipo:")
        OutlinedTextField(
            value = descricao,
            onValueChange = { descricao = it },
            keyboardOptions = KeyboardOptions.Default.copy(
                keyboardType = KeyboardType.Text,
                imeAction = ImeAction.Done
            )
        )

        Spacer(modifier = Modifier.height(16.dp))
        Button(onClick = {
            val pessoa = Pessoa(nome, numeroTelefone, descricao)
            viewModel.setPessoa(pessoa) // Atualiza a pessoa na ViewModel
            navController.popBackStack() // Voltar para a tela anterior
        }) {
            Text("Voltar")
        }
    }
}

//------------------
// TelaCompartilha
import android.content.Intent
import androidx.compose.foundation.layout.*
import androidx.compose.material.Button
import androidx.compose.material.Text
import androidx.compose.material.TextField
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.unit.dp
import androidx.navigation.NavHostController
import com.up_des_mobile.resolucaoaula11v1.viewModel.MainViewModel

@Composable
fun TelaCompartilha(navController: NavHostController, viewModel : MainViewModel) {
    var pessoa = viewModel.pessoa
    val context = LocalContext.current
    var intention by remember { mutableStateOf("") }

    val personalData = pessoa?.let {
        "Nome: ${it.nome} \nTelefone: ${it.numeroTelefone} \nDescrição: ${it.descricao}"
    } ?: "Nenhum dado pessoal disponível."

    Column(modifier = Modifier.fillMaxSize().padding(16.dp)
        ,horizontalAlignment = Alignment.CenterHorizontally
        ,verticalArrangement = Arrangement.Center) {
        Text("Dados Pessoais Preenchidos:")
        Text(personalData)
        Spacer(modifier = Modifier.height(16.dp))
        Text("Intenção:")
        TextField(value = intention, onValueChange = { intention = it })
        Spacer(modifier = Modifier.height(16.dp))

        Button(onClick = {
            val intent = Intent().apply {
                action = Intent.ACTION_SEND
                putExtra(Intent.EXTRA_TEXT, "$personalData\nIntenção: $intention")
                type = "text/plain"
            }
            context.startActivity(Intent.createChooser(intent, "Compartilhe"))
        }) {
            Text("Compartilhar")
        }
        Spacer(modifier = Modifier.height(16.dp))
        Button(onClick = { navController.popBackStack() }) {
            Text("Voltar")
        }
    }
}
